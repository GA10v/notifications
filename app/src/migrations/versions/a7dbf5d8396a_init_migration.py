"""Init migration

Revision ID: a7dbf5d8396a
Revises:
Create Date: 2023-01-15 13:19:17.935327

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a7dbf5d8396a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'content',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('content_id', postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column(
            'content_type',
            sa.Enum('new_film', 'new_user', 'review_like', 'custom_mail', name='contenttype'),
            nullable=True,
        ),
        sa.Column('content', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index('idx_content', 'content', ['content_id', 'content_type'], unique=True)
    op.create_index(op.f('ix_content_id'), 'content', ['id'], unique=False)
    op.create_table(
        'notification',
        sa.Column('notification_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('content_id', postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column(
            'content_type',
            sa.Enum('new_film', 'new_user', 'review_like', 'custom_mail', name='contenttype'),
            nullable=True,
        ),
        sa.Column('last_update', sa.DateTime(), nullable=True),
        sa.Column('last_notification_send', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('notification_id'),
    )
    op.create_index('idx_notification', 'notification', ['content_id', 'content_type'], unique=True)
    op.create_index(op.f('ix_notification_notification_id'), 'notification', ['notification_id'], unique=False)
    op.create_table(
        'user',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column('communication_method', sa.Enum('ws', 'email', 'telegram', name='communicationtype'), nullable=True),
        sa.Column('allow_communication', sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table(
        'subscription',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column('notification_id', postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column('last_notification_send_to_user', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['notification_id'], ['notification.notification_id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_subscription_id'), 'subscription', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_subscription_id'), table_name='subscription')
    op.drop_table('subscription')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_notification_notification_id'), table_name='notification')
    op.drop_index('idx_notification', table_name='notification')
    op.drop_table('notification')
    op.drop_index(op.f('ix_content_id'), table_name='content')
    op.drop_index('idx_content', table_name='content')
    op.drop_table('content')
    # ### end Alembic commands ###
