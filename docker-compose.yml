version: '3.9'

services:
  rabbit_worker:
    build:
      context: services/sender
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: >
      bash -c "python -m v1.workers.rabbit_worker"


  websocket_worker:
    build:
      context: services/sender
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    ports:
      - "8765:8765"
    env_file:
      - .env
    command: >
      bash -c "python -m v1.workers.websocket_worker --port 8765 --ip 0.0.0.0"

  postgres:
    container_name: postgres
    image: postgres:15.2-alpine3.17
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_PASSWORD: ${DJANGO_POSTGRES_PASSWORD}
      POSTGRES_USER: ${DJANGO_POSTGRES_USER}
      POSTGRES_DB: ${DJANGO_POSTGRES_DB}
    env_file:
      .env

  admin-panel:
    container_name: admin_panel
    build:
      context: services/admin_panel
      dockerfile: Dockerfile
    volumes:
      - static:/opt/app/static/
      - media:/opt/app/media/
    depends_on:
      - postgres
    env_file:
      - .env
    command: >
      bash -c "python manage.py collectstatic --noinput
      && python manage.py compilemessages
      && uwsgi --strict --ini uwsgi/uwsgi.ini"

  celery:
    container_name: celery
    build:
      context: services/admin_panel
      dockerfile: Dockerfile
    depends_on:
      - postgres
    env_file:
      - .env
    command: celery -A admin_panel worker -l info

  celery-beat:
    container_name: celery_beat
    build:
      context: services/admin_panel
      dockerfile: Dockerfile
    depends_on:
      - postgres
    env_file:
      - .env
    command: celery -A admin_panel beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASSWORD}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "5672" ]
      interval: 10s
      timeout: 10s
      retries: 5

volumes:
  rabbitmq_data:
  postgres_data:
  static:
  media:
