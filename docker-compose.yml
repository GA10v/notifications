version: '3'
services:

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: nots_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    expose:
      - "5672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
    env_file:
      - .env
    healthcheck:
      test: nc -z localhost 5672 || exit -1
      interval: 5s
      timeout: 10s
      retries: 10
    restart: always

  postgres:
    image: postgres:13.3
    container_name: nots_postgres
    env_file:
      - .env
    expose:
      - "5342"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 5s
      timeout: 10s
      retries: 10

  nginx:
    container_name: nginx
    image: nginx:1.23
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    depends_on:
      fastapi:
        condition: service_started
    ports:
      - "8000:8000"
      - "8080:8080"

  fastapi:
    build:
      context: .
      args:
        PROJECT_ENV: produdction
    image: project_image:latest
    container_name: nots_fastapi
    entrypoint: sh -c "app/src/entrypoint.sh"
    expose:
      - "8080"
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: on-failure

  django:
    image: project_image:latest
    container_name: nots_django
    entrypoint: sh -c "admin_panel/src/entrypoint.sh"
    depends_on:
      - fastapi
    expose:
      - "8000"
    env_file:
      - .env
    restart: on-failure

  mailhog:
    container_name: nots_mailhog
    image: mailhog/mailhog
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui

volumes:
  rabbitmq_data:
  postgres_data: